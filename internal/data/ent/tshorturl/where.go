// Code generated by ent, DO NOT EDIT.

package tshorturl

import (
	"entgo.io/ent/dialect/sql"
	"github.com/phpgao/durl_backend/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldID, id))
}

// BizID applies equality check predicate on the "biz_id" field. It's identical to BizIDEQ.
func BizID(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldBizID, v))
}

// Origin applies equality check predicate on the "origin" field. It's identical to OriginEQ.
func Origin(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldOrigin, v))
}

// Short applies equality check predicate on the "short" field. It's identical to ShortEQ.
func Short(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldShort, v))
}

// Visit applies equality check predicate on the "visit" field. It's identical to VisitEQ.
func Visit(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldVisit, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldUpdatedAt, v))
}

// ExpiredAt applies equality check predicate on the "expired_at" field. It's identical to ExpiredAtEQ.
func ExpiredAt(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldExpiredAt, v))
}

// BizIDEQ applies the EQ predicate on the "biz_id" field.
func BizIDEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldBizID, v))
}

// BizIDNEQ applies the NEQ predicate on the "biz_id" field.
func BizIDNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldBizID, v))
}

// BizIDIn applies the In predicate on the "biz_id" field.
func BizIDIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldBizID, vs...))
}

// BizIDNotIn applies the NotIn predicate on the "biz_id" field.
func BizIDNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldBizID, vs...))
}

// BizIDGT applies the GT predicate on the "biz_id" field.
func BizIDGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldBizID, v))
}

// BizIDGTE applies the GTE predicate on the "biz_id" field.
func BizIDGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldBizID, v))
}

// BizIDLT applies the LT predicate on the "biz_id" field.
func BizIDLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldBizID, v))
}

// BizIDLTE applies the LTE predicate on the "biz_id" field.
func BizIDLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldBizID, v))
}

// OriginEQ applies the EQ predicate on the "origin" field.
func OriginEQ(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldOrigin, v))
}

// OriginNEQ applies the NEQ predicate on the "origin" field.
func OriginNEQ(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldOrigin, v))
}

// OriginIn applies the In predicate on the "origin" field.
func OriginIn(vs ...string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldOrigin, vs...))
}

// OriginNotIn applies the NotIn predicate on the "origin" field.
func OriginNotIn(vs ...string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldOrigin, vs...))
}

// OriginGT applies the GT predicate on the "origin" field.
func OriginGT(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldOrigin, v))
}

// OriginGTE applies the GTE predicate on the "origin" field.
func OriginGTE(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldOrigin, v))
}

// OriginLT applies the LT predicate on the "origin" field.
func OriginLT(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldOrigin, v))
}

// OriginLTE applies the LTE predicate on the "origin" field.
func OriginLTE(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldOrigin, v))
}

// OriginContains applies the Contains predicate on the "origin" field.
func OriginContains(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldContains(FieldOrigin, v))
}

// OriginHasPrefix applies the HasPrefix predicate on the "origin" field.
func OriginHasPrefix(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldHasPrefix(FieldOrigin, v))
}

// OriginHasSuffix applies the HasSuffix predicate on the "origin" field.
func OriginHasSuffix(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldHasSuffix(FieldOrigin, v))
}

// OriginEqualFold applies the EqualFold predicate on the "origin" field.
func OriginEqualFold(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEqualFold(FieldOrigin, v))
}

// OriginContainsFold applies the ContainsFold predicate on the "origin" field.
func OriginContainsFold(v string) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldContainsFold(FieldOrigin, v))
}

// ShortEQ applies the EQ predicate on the "short" field.
func ShortEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldShort, v))
}

// ShortNEQ applies the NEQ predicate on the "short" field.
func ShortNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldShort, v))
}

// ShortIn applies the In predicate on the "short" field.
func ShortIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldShort, vs...))
}

// ShortNotIn applies the NotIn predicate on the "short" field.
func ShortNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldShort, vs...))
}

// ShortGT applies the GT predicate on the "short" field.
func ShortGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldShort, v))
}

// ShortGTE applies the GTE predicate on the "short" field.
func ShortGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldShort, v))
}

// ShortLT applies the LT predicate on the "short" field.
func ShortLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldShort, v))
}

// ShortLTE applies the LTE predicate on the "short" field.
func ShortLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldShort, v))
}

// VisitEQ applies the EQ predicate on the "visit" field.
func VisitEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldVisit, v))
}

// VisitNEQ applies the NEQ predicate on the "visit" field.
func VisitNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldVisit, v))
}

// VisitIn applies the In predicate on the "visit" field.
func VisitIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldVisit, vs...))
}

// VisitNotIn applies the NotIn predicate on the "visit" field.
func VisitNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldVisit, vs...))
}

// VisitGT applies the GT predicate on the "visit" field.
func VisitGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldVisit, v))
}

// VisitGTE applies the GTE predicate on the "visit" field.
func VisitGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldVisit, v))
}

// VisitLT applies the LT predicate on the "visit" field.
func VisitLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldVisit, v))
}

// VisitLTE applies the LTE predicate on the "visit" field.
func VisitLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldVisit, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldUpdatedAt, v))
}

// ExpiredAtEQ applies the EQ predicate on the "expired_at" field.
func ExpiredAtEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldEQ(FieldExpiredAt, v))
}

// ExpiredAtNEQ applies the NEQ predicate on the "expired_at" field.
func ExpiredAtNEQ(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNEQ(FieldExpiredAt, v))
}

// ExpiredAtIn applies the In predicate on the "expired_at" field.
func ExpiredAtIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldIn(FieldExpiredAt, vs...))
}

// ExpiredAtNotIn applies the NotIn predicate on the "expired_at" field.
func ExpiredAtNotIn(vs ...int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldNotIn(FieldExpiredAt, vs...))
}

// ExpiredAtGT applies the GT predicate on the "expired_at" field.
func ExpiredAtGT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGT(FieldExpiredAt, v))
}

// ExpiredAtGTE applies the GTE predicate on the "expired_at" field.
func ExpiredAtGTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldGTE(FieldExpiredAt, v))
}

// ExpiredAtLT applies the LT predicate on the "expired_at" field.
func ExpiredAtLT(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLT(FieldExpiredAt, v))
}

// ExpiredAtLTE applies the LTE predicate on the "expired_at" field.
func ExpiredAtLTE(v int64) predicate.TShortUrl {
	return predicate.TShortUrl(sql.FieldLTE(FieldExpiredAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TShortUrl) predicate.TShortUrl {
	return predicate.TShortUrl(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TShortUrl) predicate.TShortUrl {
	return predicate.TShortUrl(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TShortUrl) predicate.TShortUrl {
	return predicate.TShortUrl(sql.NotPredicates(p))
}
