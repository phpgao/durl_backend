// Code generated by ent, DO NOT EDIT.

package tshorturl

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the tshorturl type in the database.
	Label = "tshort_url"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBizID holds the string denoting the biz_id field in the database.
	FieldBizID = "biz_id"
	// FieldOrigin holds the string denoting the origin field in the database.
	FieldOrigin = "origin"
	// FieldShort holds the string denoting the short field in the database.
	FieldShort = "short"
	// FieldVisit holds the string denoting the visit field in the database.
	FieldVisit = "visit"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldExpiredAt holds the string denoting the expired_at field in the database.
	FieldExpiredAt = "expired_at"
	// Table holds the table name of the tshorturl in the database.
	Table = "short_url"
)

// Columns holds all SQL columns for tshorturl fields.
var Columns = []string{
	FieldID,
	FieldBizID,
	FieldOrigin,
	FieldShort,
	FieldVisit,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldExpiredAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// OriginValidator is a validator for the "origin" field. It is called by the builders before save.
	OriginValidator func(string) error
	// DefaultVisit holds the default value on creation for the "visit" field.
	DefaultVisit int64
	// DefaultExpiredAt holds the default value on creation for the "expired_at" field.
	DefaultExpiredAt int64
)

// OrderOption defines the ordering options for the TShortUrl queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByBizID orders the results by the biz_id field.
func ByBizID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBizID, opts...).ToFunc()
}

// ByOrigin orders the results by the origin field.
func ByOrigin(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrigin, opts...).ToFunc()
}

// ByShort orders the results by the short field.
func ByShort(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldShort, opts...).ToFunc()
}

// ByVisit orders the results by the visit field.
func ByVisit(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVisit, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByExpiredAt orders the results by the expired_at field.
func ByExpiredAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiredAt, opts...).ToFunc()
}
